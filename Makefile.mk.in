# $Id$
#
#---       `tress' 0.0.0 (c) 1978 by Marcin 'Amok' Konarski      ---
#
# Makefile - this file is integral part of `tress' project.
#
# i.  You may not make any changes in Copyright information.
# ii. You must attach Copyright information to any part of every copy
#     of this software.
#
#Copyright:
#
# You are free to use this program as is, you can redistribute binary
# package freely but:
#  1. You cannot use any part of sources of this software.
#  2. You cannot redistribute any part of sources of this software.
#  3. No reverse engineering is allowed.
#  4. If you want redistribute binary package you cannot demand any fees
#     for this software.
#     You cannot even demand cost of the carrier (CD for example).
#  5. You cannot include it to any commercial enterprise (for example
#     as a free add-on to payed software or payed newspaper).
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. Use it at your own risk.

$(eval DIR_ROOT?=$(subst /Makefile.mk.in,,$(lastword $(realpath $(foreach DIR,$(subst /, ,$(CURDIR)), $(eval DIR_ROOT_TEST=$(DIR_ROOT_TEST)/$(DIR))$(DIR_ROOT_TEST)/Makefile.mk.in)))))
PRJNAME        = tress
VERSION        = 0
SUBVERSION     = 0
EXTRAVERSION   = 0
prefix         = @prefix@
exec_prefix    = @exec_prefix@
DIR_SYSCONF    = $(DESTDIR)@sysconfdir@
DIR_BIN        = $(DESTDIR)@bindir@
DIR_LIB        = $(DESTDIR)@libdir@
DIR_LOCALSTATE = $(DESTDIR)@localstatedir@
DIR_HEADERS    = $(DESTDIR)@includedir@
DIR_SHARE      = $(DESTDIR)@datarootdir@
LIB_PREFIX     = @LIB_PREFIX@
CXX            = @CXX@
MKDIR_P        = @MKDIR_P@
INSTALL        = @INSTALL@
RANLIB         = @RANLIB@
GITID          = @GITID@
CTAGS          = @CTAGS@
GTAGS          = @GTAGS@
include $(DIR_ROOT)/_aux/mk/1_basic.mk
LIBS           = yaal_hcore$(LIB_INFIX) yaal_tools$(LIB_INFIX) yaal_dbwrapper$(LIB_INFIX) \
								 yaal_hconsole$(LIB_INFIX) yaal_hdata$(LIB_INFIX) yaal_hconsole$(LIB_INFIX) \
								 yaal_dbwrapper$(LIB_INFIX) yaal_tools$(LIB_INFIX) yaal_hcore$(LIB_INFIX) \
                 @BOOST_FILESYSTEM_LIB@ @BOOST_SYSTEM_LIB@ @BOOST_DATE_TIME_LIB@
$(eval $(call NEW_TARGET,tress,src,-D__TRESS__ -Wno-variadic-macros,@RDYNAMIC@))
$(eval $(call NEW_TARGET,child,child,-D__CHILD__))
NAME = tressplugin
SONAME_tressplugin = $(LIB_PREFIX)tressplugin$(LIB_INFIX).$(LIB_SUFFIX)-0.0
$(eval $(call NEW_TARGET,tressplugin,data,,-lc -shared $(call quotecomma,@SONAME_FLAG@)))
EXEC_NAME    = 1exec
DO_@DO_TARGET@=1
ifdef NODEBUG
	TARGET     = $(PRJNAME)
endif
include $(DIR_ROOT)/_aux/mk/2_term.mk
include $(DIR_ROOT)/_aux/mk/3_suffix.mk
include $(DIR_ROOT)/_aux/mk/4_wrapper.mk
include $(DIR_ROOT)/_aux/mk/5_flags.mk
-include $(DIR_ROOT)/local.mk

EXTRA_COMPILER_DEBUG_FLAGS=@EXTRA_COMPILER_DEBUG_FLAGS@
EXTRA_COMPILER_OPTIMIZATION_FLAGS=@EXTRA_COMPILER_OPTIMIZATION_FLAGS@
EXTRA_INCLUDE_PATHS=@EXTRA_INCLUDE_PATHS@
EXTRA_LIBRARY_PATHS=@EXTRA_LIBRARY_PATHS@
EXTRA_CXXFLAGS=@EXTRA_CXXFLAGS@
EXTRA_LXXFLAGS=@EXTRA_LXXFLAGS@
override CXXFLAGS += @DEFS@ -Wno-missing-noreturn
override LXXFLAGS += @BOOST_LDFLAGS@
START_GROUP  = @START_GROUP@
END_GROUP    = @END_GROUP@
LIBS         += @LIBS@

include $(DIR_ROOT)/_aux/mk/6_int-libs.mk
include $(DIR_ROOT)/FCTF/make.mk
include $(DIR_ROOT)/FCTF/c_target-default.mk
include $(DIR_ROOT)/_aux/mk/7_func.mk
include $(DIR_ROOT)/_aux/mk/8_prepare-target.mk
include $(DIR_ROOT)/_aux/mk/9_common-targets.mk
include $(DIR_ROOT)/_aux/mk/a_filenames.mk
include $(DIR_ROOT)/_aux/mk/d_target-tools.mk
include $(DIR_ROOT)/_aux/mk/e_deps.mk

.PHONY: test

test: debug
	@cd $(DIR_ROOT) && mkdir -p out && sqlite3 out/tress.sqlite < data/sqlite.sql && \
	. _aux/set-limits.sh && $(TRESS_ENV) ./build/$(TARGET)/tress/1exec $(TRESS_ARG) > /dev/null

memcheck: debug
	@cd $(DIR_ROOT) && mkdir -p out && sqlite3 out/tress.sqlite < data/sqlite.sql && \
	. _aux/set-limits.sh && $(TRESS_ENV) valgrind ./build/$(TARGET)/tress/1exec $(TRESS_ARG) > /dev/null; \
	test $$? -ne 255
