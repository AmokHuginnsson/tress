/* Read tress/LICENSE.md file for copyright and licensing information. */

#include <yaal/hcore/hlist.hxx>
M_VCSID ( "$Id$" )

using namespace yaal;
using namespace yaal::hcore;

#ifndef MAKE_DEP

namespace {

typedef HList<int> int_list_t;

#if defined ( BUG_0 )
int sum( int_list_t const& l ) {
	int l_iSum = 0;

	for ( int_list_t::iterator it = l.begin(); it != l.end(); ++ it ) /* MUST_FAIL_HERE */
		l_iSum += *it;
	return ( l_iSum );
}
#elif defined ( BUG_1 )
int sum( int_list_t const& l ) {
	int l_iSum = 0;

	for ( int_list_t::const_iterator it = l.begin(); it != l.end(); ++ it )
		*it = -*it; /* MUST_FAIL_HERE */
	return ( l_iSum );
}
#elif defined ( BUG_2 )
int sum( int_list_t const& l ) {
	int_list_t::reverse_iterator rit( l.begin() ); /* MUST_FAIL_HERE */
	return ( 0 );
}
#elif defined ( BUG_3 )
int sum( int_list_t const& l ) {
	int_list_t::const_reverse_iterator rit( l.begin() );
	*rit = 0; /* MUST_FAIL_HERE */
	return ( 0 );
}
#else
#	error NO_SUCH_BUG
#endif

}

int main( int, char** ) {
	int_list_t l;
	l.push_back( 1 );
	l.push_back( 3 );
	l.push_back( 5 );
	return ( sum( l ) );
}

#endif /* #ifndef MAKE_DEP */

/* vim: set ft=cpp: */
