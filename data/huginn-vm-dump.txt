Huginn VM state for `*anonymous stream*`
package: algo = Algorithms
class: -*bound_method* {}
class: -*function_reference* {}
class: -*method* {}
class: -*named_parameters* {}
class: -*none* {}
class: -*object_reference* {}
class: -*observer* {}
class: -*reference* {}
class: -*unbound_method* {}
class: -*variadic_parameters* {}
class: Algorithms { AlgorithmsException, chain, enumerate, filter, iterator, map, materialize, max, min, product, range, reduce, reversed, slice, sorted, zip }
class: AlgorithmsException : Exception { message, trace, what, where }
class: ArithmeticException : Exception { message, trace, what, where }
class: Base { bar, foo }
class: -COLOR.COLOR_ENUMERAL { to_string }
class: -Algorithms.Chain {}
class: ConversionException : Exception { message, trace, what, where }
class: Derived : Base { bar, foo, baz }
class: -Algorithms.Enumerator {}
class: Exception { message, trace, what, where }
class: -Algorithms.Filter {}
class: IterableAdaptor {}
class: -Algorithms.Iterator { is_valid, next, value }
class: -dict.KeyValuesDictView {}
class: -lookup.KeyValuesLookupView {}
class: -Algorithms.Mapper {}
class: -Algorithms.Product {}
class: -Algorithms.Range { contains }
class: -deque.ReversedDequeView {}
class: -dict.ReversedDictView {}
class: -list.ReversedListView {}
class: -lookup.ReversedLookupView {}
class: -order.ReversedOrderView {}
class: -set.ReversedSetView {}
class: -string.ReversedStringView {}
class: -tuple.ReversedTupleView {}
class: RuntimeException : Exception { message, trace, what, where }
class: -Stream.SEEK.SEEK_ENUMERAL { to_string }
class: -Algorithms.Slice {}
class: StackFrameInfo { column, context, file, line, to_string }
class: Stream { SEEK, StreamException, deserialize, read_blob, read_character, read_integer, read_integer_unsigned, read_line, read_real, read_string, seek, serialize, write_blob, write_character, write_integer, write_integer_unsigned, write_line, write_real, write_string }
class: StreamException : Exception { message, trace, what, where }
class: Time { from_string, get_day, get_day_of_week, get_days_in_month, get_hour, get_minute, get_month, get_second, get_year, mod_day, mod_hour, mod_minute, mod_month, mod_second, mod_year, set_date, set_datetime, set_time, to_string }
class: -Algorithms.Zip {}
class: blob { io }
class: boolean {}
class: character { is_alnum, is_alpha, is_digit, is_lower, is_space, is_upper, is_xdigit, to_lower, to_upper }
class: deque { append, clear, find, insert, pop, pop_front, prepend, push, push_front }
class: dict { add, clear, ensure, equals, erase, get, has_key, hash, update, values }
class: integer {}
class: list { append, clear, find, insert, pop, push, resize, sort }
class: lookup { add, clear, ensure, equals, erase, get, has_key, hash, update, values }
class: number { get_precision, is_exact, is_integral, set_precision }
class: order { add, clear, equals, erase, has_key, hash, insert, update }
class: real {}
class: set { add, clear, equals, erase, has_key, hash, insert, update }
class: string { clear, ends_with, find, find_last, find_last_one_of, find_last_other_than, find_one_of, find_other_than, format, replace, starts_with, strip, strip_left, strip_right, to_lower, to_upper }
class: tuple { find }
enum: COLOR { BLUE, GREEN, RED }
enum: -Stream.SEEK { BEGIN, CURRENT, END }
function: add
function: assert
function: copy
function: input
function: main
function: observe
function: print
function: size
function: type
function: use
function: ∏
function: ∑
function: √
