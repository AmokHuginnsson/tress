#! /usr/bin/env python

import subprocess
import pygtk
import pango
pygtk.require('2.0')
import gtk

class GTress:
	def __init__( self ):
		self._window = gtk.Window( gtk.WINDOW_TOPLEVEL )
		self._window.set_border_width( 10 )
		self._window.connect( "destroy", self.destroy )
		self._window.connect( "delete_event", self.delete_event )
		self._window.set_size_request( 620, 460 )
		self._data = gtk.ListStore( str, int, bool )
		self._list = gtk.TreeView( self._data )

		self._vbox = gtk.VBox()

		self._frame = gtk.Frame()
		self._frame.set_border_width( 16 )

		self._scrollingArea = gtk.ScrolledWindow()
		self._scrollingArea.set_policy( gtk.POLICY_AUTOMATIC, gtk.POLICY_ALWAYS )
		self._scrollingArea.set_border_width( 0 )

		self._listSuiteNameColumn = gtk.TreeViewColumn( "test suite" )
		self._listSuiteNameCellRenderer = gtk.CellRendererText()
		self._listSuiteNameColumn.pack_start( self._listSuiteNameCellRenderer, True )
		self._listSuiteNameColumn.add_attribute( self._listSuiteNameCellRenderer, "text", 0 )
		self._listSuiteNameColumn.set_sizing( gtk.TREE_VIEW_COLUMN_AUTOSIZE )
		self._listSuiteNameColumn.set_resizable( True )
		self._listSuiteNameColumn.set_expand( True )
	
		self._listTestCountColumn = gtk.TreeViewColumn( "test count" )
		self._listTestCountCellRenderer = gtk.CellRendererText()
		self._listTestCountCellRenderer.set_property( "xalign", 1 )
		self._listTestCountCellRenderer.set_property( "xpad", 8 )
		self._listTestCountColumn.pack_start( self._listTestCountCellRenderer, True )
		self._listTestCountColumn.add_attribute( self._listTestCountCellRenderer, "text", 1 )
		self._listTestCountColumn.set_sizing( gtk.TREE_VIEW_COLUMN_FIXED )
		self._listTestCountColumn.set_fixed_width( 80 )
		self._listTestCountColumn.set_resizable( False )
		self._listTestCountColumn.set_expand( False )

		self._listSuiteEnabledColumn = gtk.TreeViewColumn( "enabled" )
		self._listSuiteEnabledCellRenderer = gtk.CellRendererToggle()
		self._listSuiteEnabledCellRenderer.set_property( "activatable", True )
		self._listSuiteEnabledCellRenderer.set_property( "xalign", 0.5 )
		self._listSuiteEnabledColumn.pack_start( self._listSuiteEnabledCellRenderer, True )
		self._listSuiteEnabledColumn.add_attribute( self._listSuiteEnabledCellRenderer, "active", 2 )
		self._listSuiteEnabledCellRenderer.connect( "toggled", self.col1_toggled_cb, self._data )
		self._listSuiteEnabledColumn.set_sizing( gtk.TREE_VIEW_COLUMN_FIXED )
		self._listSuiteEnabledColumn.set_fixed_width( 64 )
		self._listSuiteEnabledColumn.set_resizable( False )
		self._listSuiteEnabledColumn.set_expand( False )

		self._list.append_column( self._listSuiteNameColumn )
		self._list.append_column( self._listTestCountColumn )
		self._list.append_column( self._listSuiteEnabledColumn )
		self._list.set_headers_visible( True )
		tests = subprocess.Popen( [ "./build/debug/tress/1exec", "-L", "-v" ], stdout = subprocess.PIPE ).stdout
		for line in tests.readlines():
			fields = line.lstrip( " \t" ).strip( "\n" ).split()
			if ( fields[0] != "setup._argc" ) and ( fields[0] != "setup._argv[0]" ) and ( fields[0] != "total" ):
				self._data.append( [ fields[0], int( fields[1] ), False ] )
		self._scrollingArea.add( self._list )
		self._frame.add( self._scrollingArea )
		self._vbox.add( self._frame )
		self._window.add( self._vbox )
		self._list.show()
		self._scrollingArea.show()
		self._frame.show()
		self._vbox.show()
		self._window.show()

	def col1_toggled_cb( self, cell, path, model ):
		model[path][1] = not model[path][1]
		return

	def main( self ):
		gtk.main()

	def delete_event( self, widget, data = None ):
		return False

	def destroy( self, widget, data = None ):
		gtk.main_quit()

if __name__ == "__main__":
	gtress = GTress()
	gtress.main()

